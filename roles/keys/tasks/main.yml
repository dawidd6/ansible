- name: lookup keys
  find:
    paths:
      - "{{ '/Volumes' if ansible_facts['os_family'] == 'Darwin' else '/media' }}"
    depth: 2
    recurse: yes
    patterns: "*keys.tar.gz"
  register: keys_tarball

- name: debug
  debug:
    var: keys_tarball.files[0].path

- name: deploy keys
  when: keys_tarball.matched == 1
  block:
    - name: unarchive keys
      unarchive:
        src: "{{ keys_tarball.files[0].path }}"
        dest: "{{ ansible_env.HOME }}"
        creates: "{{ keys }}/HEAD"
    - name: do not show untracked keys
      git_config:
        repo: "{{ keys }}"
        name: "status.showUntrackedFiles"
        value: "no"
        scope: local
    - name: set keys fetch config
      git_config:
        repo: "{{ keys }}"
        name: "remote.origin.fetch"
        value: "+refs/heads/*:refs/remotes/origin/*"
        scope: local
    - name: checkout keys
      command: git --git-dir="{{ keys }}" --work-tree="{{ ansible_env.HOME }}" checkout -f
      args:
        creates: "{{ ansible_env.HOME }}/.ssh/id_rsa"
        warn: false
    - name: fix keys permissions (dirs)
      file:
        path: "{{ item }}"
        mode: 0700
      with_items:
        - "{{ ansible_env.HOME }}/.gnupg"
        - "{{ ansible_env.HOME }}/.ssh"
    - name: fix keys permissions (files)
      file:
        path: "{{ item }}"
        mode: 0600
      with_fileglob:
        - "{{ ansible_env.HOME }}/.gnupg/*"
        - "{{ ansible_env.HOME }}/.ssh/*"
