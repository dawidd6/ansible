- name: Make the OS mine
  hosts: localhost
  vars:
    homebrew_prefix: /home/linuxbrew/.linuxbrew
  handlers:
    - name: Checkout dotfiles
      ansible.builtin.command: "git --git-dir={{ ansible_env.HOME }}/.dotfiles --work-tree={{ ansible_env.HOME }} checkout -f"
      args:
        warn: false

    - name: Checkout keys
      ansible.builtin.command: "git --git-dir={{ ansible_env.HOME }}/.keys --work-tree={{ ansible_env.HOME }} checkout -f"
      args:
        warn: false

    - name: Install nvim plugins
      environment:
        PATH: "{{ homebrew_prefix }}/bin"
      ansible.builtin.command: nvim -c PlugInstall -c qa
  tasks:
    - name: Apt-related
      tags:
        - apt
      block:
        - name: Add chrome repo key
          become: true
          ansible.builtin.apt_key:
            url: https://dl.google.com/linux/linux_signing_key.pub

        - name: Add chrome repo
          become: true
          ansible.builtin.lineinfile:
            line: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
            path: /etc/apt/sources.list.d/google-chrome.list
            regexp: deb
            create: true
            mode: 0644

        - name: Install apt packages
          become: true
          ansible.builtin.apt:
            update_cache: true
            name:
              # --- homebrew ---
              - build-essential
              - procps
              - curl
              - file
              - git
              - zlib1g-dev
              # --- containers ---
              - uidmap
              # --- flatpak ---
              - flatpak
              # --- gnome ---
              - gnome-tweaks
              - network-manager-openconnect-gnome
              # --- chrome ---
              - google-chrome-stable

        - name: Purge apt packages
          become: true
          ansible.builtin.apt:
            state: absent
            purge: true
            autoremove: true
            name:
              - snapd
              - unattended-upgrades

    - name: Homebrew-related
      tags:
        - homebrew
      block:
        - name: Create Homebrew base directories
          become: true
          ansible.builtin.file:
            path: "{{ homebrew_prefix }}/bin"
            state: directory
            owner: "{{ ansible_env.USER }}"
            group: "{{ ansible_env.USER }}"
            mode: 0755

        - name: Clone Homebrew repository
          ansible.builtin.git:
            repo: https://github.com/Homebrew/brew
            dest: "{{ homebrew_prefix }}/Homebrew"
            update: false
            version: master

        - name: Create symlink to brew binary
          ansible.builtin.file:
            src: "{{ homebrew_prefix }}/Homebrew/bin/brew"
            dest: "{{ homebrew_prefix }}/bin/brew"
            state: link

        - name: Install Homebrew formulae
          vars:
            formulae:
              - dawidd6/tap/sshpass
              - ansible
              - ansible-lint
              - bat
              - btop
              - cpio
              - curl
              - diff-so-fancy
              - diffoscope
              - distrobox
              - dos2unix
              - fish
              - fzf
              - gh
              - ghorg
              - git
              - gitbatch
              - glab
              - go
              - grex
              - htop
              - ipcalc
              - jfrog-cli
              - jq
              - lab
              - lm-sensors
              - ncdu
              - neofetch
              - neovim
              - nmap
              - node
              - noti
              - parallel
              - podman
              - python
              - rpm2cpio
              - ruby
              - shellcheck
              - strace
              - stress
              - tealdeer
              - trash-cli
              - tree
              - xsel
          environment:
            HOMEBREW_DEVELOPER: 1
            HOMEBREW_NO_AUTO_UPDATE: 1
            HOMEBREW_NO_INSTALL_FROM_API: 1
          ansible.builtin.shell: "ulimit -Sn 100000; {{ homebrew_prefix }}/bin/brew install {{ formulae | join(' ') }}"
          register: brew_install
          changed_when: '"Pouring" in brew_install.stdout'

        - name: Enable podman service
          ansible.builtin.command: "{{ homebrew_prefix }}/bin/brew services start podman"
          register: brew_services
          changed_when: '"already started" not in brew_services.stdout'

        - name: Set fish as default shell
          become: true
          ansible.builtin.user:
            name: "{{ ansible_env.USER }}"
            shell: "{{ homebrew_prefix }}/bin/fish"

    - name: Neovim-related
      tags:
        - neovim
      block:
        - name: Create nvim directories
          ansible.builtin.file:
            path: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload"
            state: directory
            mode: 0775

        - name: Install nvim plugin manager
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
            dest: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"
            mode: 0775
          notify: Install nvim plugins

    - name: Flatpak-related
      tags:
        - flatpak
      block:
        - name: Add flathub remote
          community.general.flatpak_remote:
            method: user
            flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
            name: flathub

        - name: Install flatpak packages
          community.general.flatpak:
            method: user
            name: "{{ item }}"
          loop:
            - com.visualstudio.code
            - com.spotify.Client
            - com.mattjakeman.ExtensionManager
            - org.filezillaproject.Filezilla
            - org.gimp.GIMP
            - org.kryogenix.Pick
            - org.inkscape.Inkscape
            - org.pulseaudio.pavucontrol
            - org.keepassxc.KeePassXC
            - org.gnome.Boxes
            - org.gnome.Weather

        - name: Flatpak override code
          ansible.builtin.command: "{{ item }}"
          changed_when: false
          loop:
            - flatpak override --user --reset com.visualstudio.code
            - flatpak override --user --filesystem=xdg-run/podman com.visualstudio.code
            - flatpak override --user --filesystem=/tmp com.visualstudio.code
            - "flatpak override --user --env=PATH=/app/bin:/bin:{{ ansible_env.HOME }}/bin com.visualstudio.code"

    - name: Dotfiles-related
      tags:
        - dotfiles
      block:
        - name: Clone dotfiles
          ansible.builtin.git:
            repo: https://github.com/dawidd6/dotfiles.git
            dest: "{{ ansible_env.HOME }}/.dotfiles"
            update: false
            bare: true
            version: master
          notify: Checkout dotfiles

        - name: Do not show untracked dotfiles
          community.general.git_config:
            repo: "{{ ansible_env.HOME }}/.dotfiles"
            name: "status.showUntrackedFiles"
            value: "no"
            scope: local

        - name: Set dotfiles fetch config
          community.general.git_config:
            repo: "{{ ansible_env.HOME }}/.dotfiles"
            name: "remote.origin.fetch"
            value: "+refs/heads/*:refs/remotes/origin/*"
            scope: local

    - name: Keys-related
      tags:
        - keys
      block:
        - name: Lookup keys
          ansible.builtin.find:
            file_type: directory
            paths:
              - "/media"
            depth: 3
            recurse: true
            patterns: "*keys"
          register: keys_dir

        - name: Clone keys
          ansible.builtin.git:
            repo: "{{ keys_dir.files[0].path }}"
            dest: "{{ ansible_env.HOME }}/.keys"
            accept_hostkey: true
            bare: true
            version: master
          when: keys_dir.matched == 1
          notify: Checkout keys

        - name: Set configs
          community.general.git_config:
            repo: "{{ ansible_env.HOME }}/.keys"
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            scope: local
          when: keys_dir.matched == 1
          with_items:
            - key: status.showUntrackedFiles
              value: false
            - key: remote.origin.fetch
              value: +refs/heads/*:refs/remotes/origin/*

        - name: Fix keys permissions
          ansible.builtin.file:
            path: "{{ item }}"
            mode: 0600
          when: keys_dir.matched == 1
          with_fileglob:
            - "{{ ansible_env.HOME }}/.gnupg/*"
            - "{{ ansible_env.HOME }}/.ssh/*"

    - name: Deploy scripts
      tags:
        - scripts
      ansible.builtin.git:
        repo: https://github.com/dawidd6/bin.git
        dest: "{{ ansible_env.HOME }}/bin"
        update: false
        version: master

    - name: Tweak GNOME settings
      tags:
        - gnome
      ansible.builtin.command: gsettings set '{{ item.schema }}' '{{ item.key }}' '{{ item.value }}'
      loop:
        - { schema: org.gnome.desktop.interface, key: gtk-theme, value: "Yaru-dark" }
        - { schema: org.gnome.desktop.interface, key: show-battery-percentage, value: "true" }
        - { schema: org.gnome.desktop.interface, key: clock-show-seconds, value: "true" }
        - { schema: org.gnome.desktop.interface, key: clock-show-date, value: "true" }
        - { schema: org.gnome.desktop.interface, key: clock-show-weekday, value: "true" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: use-theme-colors, value: "false" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: foreground-color, value: "#FFFFFF" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: background-color, value: "#181818" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: scrollbar-policy, value: "always" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: scrollback-unlimited, value: "false" }
        - { schema: org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:b1dcc9dd-5262-4d8d-a863-c897e6d979b9/, key: scrollback-lines, value: "10000" }
        - { schema: org.gnome.Terminal.Legacy.Settings, key: theme-variant, value: "dark" }
        - { schema: org.gnome.Terminal.Legacy.Settings, key: new-tab-position, value: "next" }
